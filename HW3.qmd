---
title: "HW3"
author: "Jiaqi"
format:
  html:
    embed-resources: true
    code-overflow: wrap
editor: visual
---

GitHub repositoryï¼šhttps://github.com/Julie0707/506_HW3

## Problem 1 - Vision

a.  Download the SAS file VIX_D, and then read it into Stata. Then download another SAS file DEMO_D. Merge the two files to create a single dataset, using the SEQN variable for merging. Print total sample size, showing that it is now 6,980.

``` stata
. * Read the VIX_D & DEMO_D dataset.
. * Save it as a Stata dataset.
. log using hw3_p1.log, replace
-------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /Users/jiaqizhu/Downloads/506/HW3/hw3_p1.log
  log type:  text
 opened on:   8 Oct 2023, 13:39:42

. import sasxport "VIX_D.xpt", clear

. save "VIX_D.dta", replace
file VIX_D.dta saved

. import sasxport "DEMO_D.xpt", clear

. save "DEMO_D.dta", replace
file DEMO_D.dta saved

. * Merging the datasets using the SEQN variable
. use "VIX_D.dta", clear

. merge 1:1 seqn using "DEMO_D.dta", keep(match) nogenerate

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                             6,980  
    -----------------------------------------

. * Print total sample size, showing that it is now 6,980.
. count
  6,980
```

b.  Estimate the proportion of respondents within each 10-year age bracket who wear glasses/contact lenses for distance vision. Produce a nice table with the results.

We can see that the min. of age is 12 and the max. is 85, so we create age brackets 10-19, 20-29, ..., 80-89. 

First, based on data description for viq220, we know that 2765 people wear glasses or contacts or both, 3780 don't wear, 2 is unkown, and 433 data is missing. We divide people into 3 categories for question "wear glasses/contacts?": "Yes", "No", and "don't know".

``` stata
. * Creating Age Brackets
. sum ridageyr

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
    ridageyr |      6,980    37.87894    21.89424         12         85

. egen agegroup = cut(ridageyr), at(10(10)90) label

. gen wears_glasses_or_contacts = .
(6,980 missing values generated)

. replace wears_glasses_or_contacts = 1 if viq220 == 1
(2,765 real changes made)

. replace wears_glasses_or_contacts = 0 if viq220 == 2
(3,780 real changes made)

. * Tabulating the Proportions
. 
. * Modify labels for viq240 to include a category for non-users.
. label define viq220_label 1 "Yes" 2 "No" 9 "Don't know" 4 "Missing", replace

. replace viq240 = 4 if viq240 != 1 & viq240 != 2 & viq240 != 9
(4,648 real changes made)

. * Now attach the label values to the variable.
. label values viq220 viq220_label

. tab agegroup viq220, row nofreq

           | Glasses/contact lenses worn for
           |             distance
  agegroup |       Yes         No  Don't kno |     Total
-----------+---------------------------------+----------
       10- |     32.09      67.91       0.00 |    100.00 
       20- |     32.59      67.20       0.21 |    100.00 
       30- |     35.87      64.13       0.00 |    100.00 
       40- |     37.00      63.00       0.00 |    100.00 
       50- |     55.01      44.99       0.00 |    100.00 
       60- |     62.22      37.78       0.00 |    100.00 
       70- |     66.89      33.11       0.00 |    100.00 
       80- |     66.88      33.12       0.00 |    100.00 
-----------+---------------------------------+----------
     Total |     42.23      57.74       0.03 |    100.00 

```

c.  Fit three logistic regression models predicting whether a respondent wears glasses/contact lenses for distance vision. Predictors: 1.age 2.age, race, gender 3.age, race, gender, Poverty Income ratio. Produce a table presenting the estimated odds ratios for the coefficients in each model, along with the sample size for the model, the pseudo-R\^2, and AIC values.

If one of the independent variables in logistic regression model is a categorical variable, we should typically include it in the model using **indicator (dummy) variables**.

Since we have generated **wears_glasses_or_contacts** before, we can run regression easily here.

``` stata
. * logistic model
. * Model 1
. logit wears_glasses_or_contacts ridageyr, or

Iteration 0:   log likelihood = -4457.6265  
Iteration 1:   log likelihood = -4236.2351  
Iteration 2:   log likelihood = -4235.9433  
Iteration 3:   log likelihood = -4235.9433  

Logistic regression                             Number of obs     =      6,545
                                                LR chi2(1)        =     443.37
                                                Prob > chi2       =     0.0000
Log likelihood = -4235.9433                     Pseudo R2         =     0.0497

-------------------------------------------------------------------------------------------
wears_glasses_or_contacts | Odds Ratio   Std. Err.      z    P>|z|     [95% Conf. Interval]
--------------------------+----------------------------------------------------------------
                 ridageyr |    1.02498   .0012356    20.47   0.000     1.022561    1.027405
                    _cons |    .283379   .0151461   -23.59   0.000     .2551952    .3146755
-------------------------------------------------------------------------------------------
Note: _cons estimates baseline odds.

. eststo model1

. * Model 2
. logit wears_glasses_or_contacts ridageyr i.ridreth1 i.riagendr, or

Iteration 0:   log likelihood = -4457.6265  
Iteration 1:   log likelihood = -4138.3859  
Iteration 2:   log likelihood = -4136.8807  
Iteration 3:   log likelihood = -4136.8805  

Logistic regression                             Number of obs     =      6,545
                                                LR chi2(6)        =     641.49
                                                Prob > chi2       =     0.0000
Log likelihood = -4136.8805                     Pseudo R2         =     0.0720

-------------------------------------------------------------------------------------------
wears_glasses_or_contacts | Odds Ratio   Std. Err.      z    P>|z|     [95% Conf. Interval]
--------------------------+----------------------------------------------------------------
                 ridageyr |   1.022831   .0012912    17.88   0.000     1.020303    1.025365
                          |
                 ridreth1 |
                       2  |   1.169203    .192081     0.95   0.341     .8473273    1.613349
                       3  |   1.952149   .1366952     9.55   0.000     1.701803    2.239322
                       4  |    1.29936   .0995052     3.42   0.001     1.118264    1.509783
                       5  |   1.917442   .2596352     4.81   0.000     1.470495    2.500236
                          |
               2.riagendr |    1.65217   .0875831     9.47   0.000     1.489127    1.833064
                    _cons |   .1593479   .0124169   -23.57   0.000     .1367784    .1856414
-------------------------------------------------------------------------------------------
Note: _cons estimates baseline odds.

. eststo model2

. * Model 3
. logit wears_glasses_or_contacts ridageyr i.ridreth1 i.riagendr indfmpir, or

Iteration 0:   log likelihood = -4259.5533  
Iteration 1:   log likelihood = -3948.3256  
Iteration 2:   log likelihood = -3946.9043  
Iteration 3:   log likelihood = -3946.9041  

Logistic regression                             Number of obs     =      6,247
                                                LR chi2(7)        =     625.30
                                                Prob > chi2       =     0.0000
Log likelihood = -3946.9041                     Pseudo R2         =     0.0734

-------------------------------------------------------------------------------------------
wears_glasses_or_contacts | Odds Ratio   Std. Err.      z    P>|z|     [95% Conf. Interval]
--------------------------+----------------------------------------------------------------
                 ridageyr |   1.022436    .001324    17.14   0.000     1.019845    1.025035
                          |
                 ridreth1 |
                       2  |   1.123021   .1889653     0.69   0.490     .8075333    1.561764
                       3  |   1.651244   .1240886     6.67   0.000     1.425098    1.913277
                       4  |   1.230456   .0974736     2.62   0.009     1.053503     1.43713
                       5  |   1.703572   .2387583     3.80   0.000     1.294384    2.242114
                          |
               2.riagendr |   1.675767   .0910025     9.51   0.000      1.50657    1.863967
                 indfmpir |   1.120301   .0198376     6.42   0.000     1.082087    1.159865
                    _cons |   .1331659   .0116903   -22.97   0.000     .1121161    .1581678
-------------------------------------------------------------------------------------------
Note: _cons estimates baseline odds.

. eststo model3

. * Produce result table
. esttab model1 model2 model3, constant eform stats(N aic r2_p)

------------------------------------------------------------
                      (1)             (2)             (3)   
             wears_glas~s    wears_glas~s    wears_glas~s   
------------------------------------------------------------
wears_glas~s                                                
ridageyr            1.025***        1.023***        1.022***
                  (20.47)         (17.88)         (17.14)   

1.ridreth1                              1               1   
                                      (.)             (.)   

2.ridreth1                          1.169           1.123   
                                   (0.95)          (0.69)   

3.ridreth1                          1.952***        1.651***
                                   (9.55)          (6.67)   

4.ridreth1                          1.299***        1.230** 
                                   (3.42)          (2.62)   

5.ridreth1                          1.917***        1.704***
                                   (4.81)          (3.80)   

1.riagendr                              1               1   
                                      (.)             (.)   

2.riagendr                          1.652***        1.676***
                                   (9.47)          (9.51)   

indfmpir                                            1.120***
                                                   (6.42)   

_cons               0.283***        0.159***        0.133***
                 (-23.59)        (-23.57)        (-22.97)   
------------------------------------------------------------
N                    6545            6545            6247   
aic                8475.9          8287.8          7909.8   
r2_p               0.0497          0.0720          0.0734   
------------------------------------------------------------
Exponentiated coefficients; t statistics in parentheses
* p<0.05, ** p<0.01, *** p<0.001

```

In this way, we obtained a nice table in Stata. 

Note: the baseline for the categorical variable is omitted from the model, so the coefficient for the baseline is 0, so exp(0) = 1.

d.  From the third model, discuss whether the odds of men and women being wears of glasess/contact differs. Test whether the proportion of wearers of glasses/contact differs between men and women.

``` stata
. * Gender diff
. logit wears_glasses_or_contacts ridageyr i.ridreth1 i.riagendr indfmpir, or

Iteration 0:   log likelihood = -4259.5533  
Iteration 1:   log likelihood = -3948.3256  
Iteration 2:   log likelihood = -3946.9043  
Iteration 3:   log likelihood = -3946.9041  

Logistic regression                             Number of obs     =      6,247
                                                LR chi2(7)        =     625.30
                                                Prob > chi2       =     0.0000
Log likelihood = -3946.9041                     Pseudo R2         =     0.0734

-------------------------------------------------------------------------------------------
wears_glasses_or_contacts | Odds Ratio   Std. Err.      z    P>|z|     [95% Conf. Interval]
--------------------------+----------------------------------------------------------------
                 ridageyr |   1.022436    .001324    17.14   0.000     1.019845    1.025035
                          |
                 ridreth1 |
                       2  |   1.123021   .1889653     0.69   0.490     .8075333    1.561764
                       3  |   1.651244   .1240886     6.67   0.000     1.425098    1.913277
                       4  |   1.230456   .0974736     2.62   0.009     1.053503     1.43713
                       5  |   1.703572   .2387583     3.80   0.000     1.294384    2.242114
                          |
               2.riagendr |   1.675767   .0910025     9.51   0.000      1.50657    1.863967
                 indfmpir |   1.120301   .0198376     6.42   0.000     1.082087    1.159865
                    _cons |   .1331659   .0116903   -22.97   0.000     .1121161    .1581678
-------------------------------------------------------------------------------------------
Note: _cons estimates baseline odds.

. tab riagendr wears_glasses_or_contacts, row

+----------------+
| Key            |
|----------------|
|   frequency    |
| row percentage |
+----------------+

           | wears_glasses_or_cont
           |         acts
    Gender |         0          1 |     Total
-----------+----------------------+----------
         1 |     2,014      1,181 |     3,195 
           |     63.04      36.96 |    100.00 
-----------+----------------------+----------
         2 |     1,766      1,584 |     3,350 
           |     52.72      47.28 |    100.00 
-----------+----------------------+----------
     Total |     3,780      2,765 |     6,545 
           |     57.75      42.25 |    100.00 

. prtest wears_glasses_or_contacts, by(riagendr)

Two-sample test of proportions                     1: Number of obs =     3195
                                                   2: Number of obs =     3350
------------------------------------------------------------------------------
       Group |       Mean   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
           1 |   .3696401   .0085398                      .3529023    .3863778
           2 |   .4728358   .0086259                      .4559293    .4897423
-------------+----------------------------------------------------------------
        diff |  -.1031958   .0121382                     -.1269861   -.0794054
             |  under Ho:   .0122146    -8.45   0.000
------------------------------------------------------------------------------
        diff = prop(1) - prop(2)                                  z =  -8.4485
    Ho: diff = 0

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(Z < z) = 0.0000         Pr(|Z| > |z|) = 0.0000          Pr(Z > z) = 1.0000

```

From the Logistic Regression Model, the coefficient for riagendr is **statistically significant** at 0.01 level( p \< 0.01), so the odds of wearing glasses/contact lenses for distance vision differs between men and women.

The **odds ratio** for the riagendr is 1.6758. Greater than 1 indicates that the predictor compared to the baseline, the odds of the outcome occurring increase 67.58%. This means that being a female compared to be a male, the odds of wearing glasses/contact increase by about 67.58%.

From the **Proportions Test**, the proportion of wearers of glasses/contact for male is 36.96%, for female is 47.28%. There is a magnitude difference 10.32%. The p-value from the prtest command is below 0.01 significance level, so reject the null hypothesis and conclude that there's a statistically significant difference in the proportion of glasses/contact lens wearers between male and female.

## Problem 2 - Sakila

a.  Aside from English, what language is most common for films? Answer this with a single SQL query.

``` sql
SELECT l.name, COUNT(f.film_id) AS film_count
FROM film f
JOIN language l ON f.language_id = l.language_id
WHERE l.name <> 'English'
GROUP BY l.name
ORDER BY film_count DESC
LIMIT 1;
```

```{r}
library(DBI)
library(RSQLite)

con <- dbConnect(RSQLite::SQLite(), "/Users/jiaqizhu/Downloads/sakila_master.db")
language_used <- dbGetQuery(con, "SELECT l.name, COUNT(f.film_id) AS film_count
FROM film f
JOIN language l ON f.language_id = l.language_id
WHERE l.name <> 'English'
GROUP BY l.name
ORDER BY film_count DESC
LIMIT 1")
language_used
dbDisconnect(con)
```

We didn't get any result. So it seems that English is the only language used in these films. To check our guess, we use the SQL query:

``` sql
SELECT DISTINCT l.name 
FROM language l
JOIN film f ON f.language_id = l.language_id;

SELECT COUNT(DISTINCT language_id) AS unique_language_count
FROM film;
```

We get the output of "English" and "1". So English is the only language for these films in the table.

b.  What genre of movie is the most common in the data, and how many movies are of this genre?

```{r}
library(DBI)
library(RSQLite)

# Connect to the SQLite database
con <- dbConnect(RSQLite::SQLite(), "/Users/jiaqizhu/Downloads/sakila_master.db")
con
film_category <- dbGetQuery(con, "SELECT * FROM film_category")
category <- dbGetQuery(con, "SELECT * FROM category")
```

```{r}
# Regular R 
# Count films per category
film_counts <- table(film_category$category_id)

# Get the most common genre ID and count
most_common_genre_id <- as.integer(names(film_counts)[which.max(film_counts)])
most_common_count <- max(film_counts)

# Get the genre name
most_common_genre_name <- subset(category, category_id == most_common_genre_id)$name

print(most_common_genre_name)
print(most_common_count)

# Disconnect
dbDisconnect(con)
```

a single SQL query:

``` sql
SELECT category.name, COUNT(film_id) AS film_count
FROM film_category
JOIN category ON film_category.category_id = category.category_id
GROUP BY category.name
ORDER BY film_count DESC
LIMIT 1;

sports|74
```

```{r}
library(DBI)
library(RSQLite)

con <- dbConnect(RSQLite::SQLite(), "/Users/jiaqizhu/Downloads/sakila_master.db")
genre <- dbGetQuery(con, "SELECT l.name, COUNT(f.film_id) AS film_count
FROM film f
JOIN language l ON f.language_id = l.language_id
WHERE l.name <> 'English'
GROUP BY l.name
ORDER BY film_count DESC
LIMIT 1")
genre
dbDisconnect(con)
```

So the most popular genre of film is sports with 74 movies.

c.  Identify which country or countries have exactly 9 customers. Answer this with a single SQL query.

```{r}
library(DBI)
library(RSQLite)

# Connect to the SQLite database
con <- dbConnect(RSQLite::SQLite(), "/Users/jiaqizhu/Downloads/sakila_master.db")
# Retrieve the customer table
customer <- dbGetQuery(con, "SELECT * FROM customer")
# Retrieve the address table
address <- dbGetQuery(con, "SELECT * FROM address")
# Retrieve the city table
city <- dbGetQuery(con, "SELECT * FROM city")
# Retrieve the country table
country <- dbGetQuery(con, "SELECT * FROM country")
```

```{r}
#| warning: true
# Regular R 
# Merge customer with address
customer_address <- merge(customer, address, by="address_id")
# Merge the above result with city
customer_address_city <- merge(customer_address, city, by="city_id")
# Merge the above result with country
merged_data <- merge(customer_address_city, country, by="country_id")
# Count the number of customers per country
country_counts <- table(merged_data$country)
# Filter countries with 9 customers
countries_with_9_customers <- names(country_counts[country_counts == 9])
print(countries_with_9_customers)

# Disconnect
dbDisconnect(con)
```

a single SQL query:

``` sql
SELECT country, COUNT(customer_id) AS customer_count
FROM customer
JOIN address ON customer.address_id = address.address_id
JOIN city ON address.city_id = city.city_id
JOIN country ON city.country_id = country.country_id
GROUP BY country
HAVING customer_count = 9;

United Kingdom|9
```

```{r}
library(DBI)
library(RSQLite)

con <- dbConnect(RSQLite::SQLite(), "/Users/jiaqizhu/Downloads/sakila_master.db")
country_9 <- dbGetQuery(con, "SELECT country, COUNT(customer_id) AS customer_count
FROM customer
JOIN address ON customer.address_id = address.address_id
JOIN city ON address.city_id = city.city_id
JOIN country ON city.country_id = country.country_id
GROUP BY country
HAVING customer_count = 9")
country_9
dbDisconnect(con)
```

So the country that has customers of 9 is the United Kingdom.

## Problem 3 - US Records

```{r}
data <- read.csv("/Users/jiaqizhu/Downloads/506/HW3/us-500.csv")
```

a.  What proportion of email addresses are hosted at a domain with TLD ".net"?

```{r}
net_emails <- sum(grepl("@.*\\.net$", data$email))
prop_net <- net_emails / nrow(data)
prop_net
```

b.  What proportion of email addresses have at least one non alphanumeric character in them?

```{r}
non_alnum_emails <- sum(grepl("[^[:alnum:]@\\.]", data$email))
prop_non_alnum <- non_alnum_emails / nrow(data)
prop_non_alnum
```

c.  What is the most common area code amongst all phone numbers?

```{r}
all_phones <- c(data$phone1, data$phone2)
area_codes <- gsub("^(\\d{3})-.*", "\\1", all_phones)
most_common_area_code <- as.integer(names(sort(table(area_codes), decreasing=TRUE)[1]))
most_common_area_code
```

d.  Produce a histogram of the log of the apartment numbers for all addresses.

From the data, we can see that the number after the \# is the apt. number. And when there is no #, just the last number from the string cannot be assumed to be the apt. number. For example, "82 Us Highway 46", 46 is not the apt. number since there is another record: "9 State Highway 57 #22", which shows 57 is not but 22 is the apt. number.

```{r}
apartments <- as.numeric(gsub(".*#(\\d+)$", "\\1", data$address))
# remove NA
apartment_numbers <- apartments[!is.na(apartments)]
apartment_numbers
hist(log(apartment_numbers))
```

e.  Benford's law is an observation about the distribution of the leading digit of real numerical data. Examine whether the apartment numbers appear to follow Benford's law. Do you think the apartment numbers would pass as real data?

According to Benford's Law, the distribution of leading digits is expected to be: 1: 30.1% 2: 17.6% 3: 12.5% 4: 9.7% 5: 7.9% 6: 6.7% 7: 5.8% 8: 5.1% 9: 4.6%

```{r}
# Benford's distribution
benford_first <- c(0.301, 0.176, 0.125, 0.097, 0.079, 0.067, 0.058, 0.051, 0.046)
benford <- log10(1 + 1 / (1:9))
barplot(benford)
leading_digits <- as.integer(substr(apartment_numbers, 1, 1))
# Calculate observed frequencies
observed_first <- table(leading_digits) / length(leading_digits)
observed_first

# Compare visually using a barplot
barplot(rbind(observed_first, benford), beside = TRUE, col = c("blue", "red"), legend.text = c("Data", "Benford"))

# Chi-squared test for first digit
expected_first <- benford_first * length(leading_digits)
chi_first <- chisq.test(as.vector(table(leading_digits)), p = benford_first)
print(chi_first)
```

The Chi-squared test gives a p-value, which tells the probability that the observed frequencies are from a distribution that matches the expected frequencies. A low p-value \< 0.05 suggests that the data does not conform to the expected distribution. The plot gives the same information. So the first digit of a sequence of numbers doesn't follows Benford's Law: I don't think the apartment numbers would pass as real data. The data might be synthetic or manipulated.

f.  Repeat your analysis of Benford's law on the last digit of the street number.

```{r}
st_number <- sub("^(\\d+).*", "\\1", data$address)
st_number <- as.integer(st_number)
last_digits <- as.integer(substr(st_number, nchar(st_number), nchar(st_number)))
observed_last <- table(last_digits) / length(last_digits)
observed_last

# Compare visually using a barplot
barplot(observed_last)
```

The last digit of numbers is close to be uniformly distributed, each of the digits (0 through 9) appear about 10% of the time. The barplot of it is difference from the previous Benford's law distr.

Based on the results from the above analyses, we draw conclusions that the last digit doesn't follow the expected benford distribution.
